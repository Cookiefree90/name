# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Check file contents"

on:
  pull_request:
    paths:
      - '**.py'

jobs:
  check-file-contents:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for logger pattern in all changed Python files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --diff-filter=ACMR --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.py$' || true)
          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed Python files to check:"
            echo "$CHANGED_FILES"
            echo ""

            # Check for `logger = logging.getLogger(__name__)` in changed .py files.
            # The grep command will exit with a non-zero status code if the pattern is not found.
            # We invert the exit code with ! so the step succeeds if the pattern is NOT found.
            set +e
            ! grep -lE 'logger = logging\.getLogger\(__name__\)' $CHANGED_FILES
            RESULT=$?
            set -e

            if [[ $RESULT -ne 0 ]]; then
              echo "Do not use `logger = logging.getLogger(__name__)`. Use `logger = logging.getLogger('google_adk.' + __name__)` instead."
              exit 1
            fi
          fi
        continue-on-error: true

      - name: Check for import pattern in certain changed Python files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --diff-filter=ACMR --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.py$' | grep -v -E '__init__.py$|version.py$|tests/.*' || true)
          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed Python files to check:"
            echo "$CHANGED_FILES"
            echo ""

            # Check for `from __future__ import annotations` in changed .py files.
            set +e
            grep -lE 'from __future__ import annotations' $CHANGED_FILES
            RESULT=$?
            set -e

            if [[ $RESULT -ne 0 ]]; then
              echo "Always use `from __future__ import annotations`. This allows us to do forward references in type annotations without quotes."
              exit 1
            fi
          fi
        continue-on-error: true

      - name: Check for import from cli package in certain changed Python files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --diff-filter=ACMR --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.py$' | grep -v -E 'cli/.*|tests/.*|contributing/samples/' || true)
          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed Python files to check:"
            echo "$CHANGED_FILES"
            echo ""

            # The grep command will exit with a non-zero status code if the pattern is not found.
            # We invert the exit code with ! so the step succeeds if the pattern is NOT found.
            set +e
            ! grep -lE '^from.*cli\\..*import.*$' $CHANGED_FILES
            RESULT=$?
            set -e

            if [[ $RESULT -ne 0 ]]; then
              echo "Do not import from the cli package outside of the cli package. If you need to reuse the code elsewhere, please move the code outside of the cli package."
              exit 1
            fi
          fi
